openapi: 3.1.1
info:
  title: "ü™∑ Lotus34 API ‚Äî Vietnam Provincial Data Service"
  summary: |-
    Lotus34 is a RESTful API offering comprehensive data on Vietnam‚Äôs 34 provinces‚Äîeffective July 1, 2025 - and
    sourced from official government records.
  description: |-
    Since July 1, 2025, Vietnam has consolidated its 63 provinces into 34, streamlining administration into just
    two tiers: province and commune. Lotus34 provides a clean, RESTful interface for accessing this updated
    provincial structure.

    Available data include:
      - üìç Province Details: official name, area, population
      - üÜî ID Card Region Codes: citizen ID prefixes
      - üöó Vehicle Plate Ranges: license-plate code allocations
      - ‚òéÔ∏è Telephone Area Codes: landline prefixes
      - üèòÔ∏è Communes: complete listings of communes within each province
      - üëç And yet to come

    All data are drawn from trusted government publications.

    Try it now with our interactive documentation!
    ---
    References:
      - https://thuvienphapluat.vn/phap-luat/ho-tro-phap-luat/danh-sach-3321-xa-phuong-dac-khu-chinh-thuc-cua-34-tinh-thanh-viet-nam-tra-cuu-3321-xa-phuong-dac-k-726625-221776.html
      - https://xaydungchinhsach.chinhphu.vn/chi-tiet-34-don-vi-hanh-chinh-cap-tinh-tu-12-6-2025-119250612141845533.htm
      - https://xaydungchinhsach.chinhphu.vn/cach-nho-12-so-can-cuoc-cong-dan-gan-chip-cuc-de-119220914161814354.htm
      - https://vov.vn/xa-hoi/sau-ngay-172025-bien-so-xe-o-34-tinh-thanh-se-duoc-cap-the-nao-post1211001.vov
      - https://vnptgroup.vn/danh-sach-dau-so-dien-thoai-co-dinh-63-tinh-moi-2020/
  version: 2.0.0
  contact:
    name: Ngo Quoc Cuong
    url: https://nqc.io.vn
    email: brian.nqc2023@gmail.com
servers:
  - url: 'https://nqc.io.vn/api/lotus34/v2'
    description: Production
  - url: 'http://localhost:3000/api/lotus34/v2'
    description: Local
paths:
  /provinces:
    get:
      summary: List all 34 provinces
      operationId: listProvinces
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListProvincesResponse"
  /provinces/{code}:
    get:
      summary: Get a single province by code
      operationId: getProvinceByCode
      parameters:
        - $ref: "#/components/parameters/ProvinceCode"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetProvinceResponse"
        404:
          description: Province with given code not found. Call GET /provinces to retrieve all province codes.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundResponse"
  /provinces/{code}/communes:
    get:
      summary: List all communes of the given province determined by code
      operationId: listCommunesByProvinceCode
      parameters:
        - $ref: "#/components/parameters/ProvinceCode"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCommunesResponse"
        404:
          description: Province with given code not found. Call GET /provinces to retrieve all province codes.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundResponse"
  /communes:
    get:
      summary: List 3321 communes across 34 provinces in Vietnam page by page
      operationId: listCommunes
      parameters:
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/Limit"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCommunesResponse"
components:
  parameters:
    Page:
      name: page
      in: query
      description: "Zero-indexed page number for List APIs which support pagination, default: 0"
      required: false
      schema:
        type: integer
        example: 0
    Limit:
      name: limit
      in: query
      description: "Limit, or page size for responses of List APIs which support pagination, default: 200, max: 500"
      required: false
      schema:
        type: integer
        example: 200
    ProvinceCode:
      name: code
      in: path
      description: Province code usually contains 2 digits to identify the province
      required: true
      schema:
        type: string
        example: "01"
  schemas:
    NotFoundResponse:
      type: object
    ResponseMeta:
      description: Response metadata such programmable error codes and human readable messages
      type: object
      properties:
        message:
          type: string
          description: Human readable message
          example: Operation successful
    ListResponseMeta:
      description: Response metadata such as size, pagination, and human readable messages
      type: object
      allOf:
        - $ref: "#/components/schemas/ResponseMeta"
      properties:
        page:
          type: integer
          description: The current zero-indexed page number
          example: 0
        total:
          type: integer
          description: The total records on current page
          example: 200
        previousPage:
          type: integer
          description: The previous zero-indexed page number, null if current page is the first page
          example: null
        nextPage:
          type: integer
          description: The next zero-indexed page number, null if current page is the last page
          example: 2
    ListProvincesResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/Provinces"
        meta:
          $ref: "#/components/schemas/ListResponseMeta"
    GetProvinceResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/Province"
        meta:
          $ref: "#/components/schemas/ResponseMeta"
    ListCommunesResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/Communes"
        meta:
          $ref: "#/components/schemas/ListResponseMeta"
    Provinces:
      type: array
      items:
        $ref: "#/components/schemas/Province"
      examples:
        hanoi:
          $ref: "#/components/examples/ProvinceExample"
    Province:
      description: Represents a province level administrative unit
      type: object
      properties:
        code:
          type: string
          description: Province code
          example: "01"
        name:
          type: string
          description: Province name in Vietnamese excluding the province type
          example: "H√† N·ªôi"
        type:
          type: string
          enum: [ "Th√†nh ph·ªë", "T·ªânh" ]
          example: "Th√†nh ph·ªë"
        fullName:
          type: string
          description: Province name prefixed by its type, useful for displaying purpose
          example: "Th√†nh ph·ªë H√† N·ªôi"
        idCardPrefix:
          type: string
          description: The first 3 digits of identity cards issued in this province
          example: "001"
        areaInKm2:
          type: number
          format: float
          description: Area of this province in square km
          example: 3359.84
        population:
          type: integer
          description: Population of this province
          example: 8435650
        vehiclePlateCodes:
          type: array
          items:
            type: integer
          description: All vehicle plate codes allocated to this province
          example: [ 29, 30 ]
        telephoneCode:
          type: integer
          description: Landed phone are code without "0" prefix
          example: 24
    Communes:
      type: array
      items:
        $ref: "#/components/schemas/Commune"
      examples:
        hanoi:
          $ref: "#/components/examples/CommuneExample"
    Commune:
      description: Represents a commune level administrative unit
      type: object
      properties:
        code:
          type: string
          description: 'Nationally unique Commune code as stated in 1656/NQ-UBTVQH15'
          example: "00004"
        name:
          type: string
          description: Commune name in Vietnamese excluding the commune type
          example: "Ba ƒê√¨nh"
        type:
          type: string
          enum: [ "X√£", "Ph∆∞·ªùng", "ƒê·∫∑c khu" ]
          example: "Ph∆∞·ªùng"
        fullName:
          type: string
          description: Commune name prefixed by its type, useful for displaying purpose
          example: "Ph∆∞·ªùng Ba ƒê√¨nh"
        provinceCode:
          type: string
          description: Province code
          example: "01"
        provinceFullName:
          type: string
          description: Province name prefixed by its type, useful for displaying purpose
          example: "Th√†nh ph·ªë H√† N·ªôi"
  examples:
    ProvinceExample:
      summary: "H√† N·ªôi as a province example"
      value:
        code: "01"
        name: "H√† N·ªôi"
        fullName: "Th√†nh ph·ªë H√† N·ªôi"
        idCardPrefix: "001"
        areaInKm2: 3359.84
        population: 8435650
        vehiclePlateCodes: [ 29, 30 ]
        telephoneCode: 24
    CommuneExample:
      summary: "Ba ƒê√¨nh as a commune level unit in H√† N·ªôi"
      value:
        code: "00004"
        name: "Ba ƒê√¨nh"
        type: "Ph∆∞·ªùng"
        fullName: "Ph∆∞·ªùng Ba ƒê√¨nh"
